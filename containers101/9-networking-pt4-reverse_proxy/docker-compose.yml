version: '3'
services:
    database: 
        container_name: photo_db 
        image: postgres:latest
        restart: always
        ports: 
        - "5432:5432"
        volumes: 
        - ./srv/data/db:/data/db # update to where PG wants data volume
        - ./srv/data/postgres:/var/lib/postgresql/data #update to where PG wants conf file
        - ./init.sh:/docker-entrypoint-initdb.d/init.sh
        environment: 
            POSTGRES_DB: photos
            POSTGRES_USER: docker
            POSTGRES_PASSWORD: test
            PGDATA: /var/lib/postgresql/data

    backend: 
        container_name: photo_backend
        image: slimpsv/photo_backend
        restart: always
        depends_on:
        - database
        build: backend/.
        ports:
        - "5000:5000"
        volumes:
        - ./srv/images:/app/static/images # should map to S3 bucket or similar
        - ./srv/data:/app/data # will remove when DB service available
        networks:
        - photonet

    frontend:
        container_name: photo_frontend
        image: slimpsv/photo_frontend
        restart: always
        build: frontend/.
        ports: 
        - "3000:3000"
        networks:
        - photonet
  
    # reverse_proxy:
    #     image: nginx:latest
    #     container_name: reverse_proxy
    #     depends_on:
    #         - frontend
    #         - backend
    #     volumes: 
    #         - ./srv/conf/nginx.conf:/etc/nginx/nginx.conf 
    #         - ./srv/conf/proxy.conf:/etc/nginx/includes/proxy.conf
    #     ports:
    #         - 80:80
    #         - 443:443

networks: 
    photonet: 

volumes:
    database: 
    backend: 
    reverse-proxy: 
    
    

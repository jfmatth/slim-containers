version: '3'
services:
    database:
        container_name: photo_db
        image: postgres:latest
        restart: always
        ports:
        - "5432:5432"
        volumes:
        - ./srv/data/db:/data/db # update to where PG wants data volume
        - ./srv/data/postgres:/var/lib/postgresql/data #update to where PG wants conf file
        #- ./init.sh:/docker-entrypoint-initdb.d/init.sh
        environment:
            POSTGRES_DB: photos
            POSTGRES_USER: docker
            POSTGRES_PASSWORD: test
            PGDATA: /var/lib/postgresql/data

    backend:
        container_name: photo_backend
        image: slimpsv/photo_backend
        restart: always
        depends_on:
        - database
        build: backend/.
        ports:
        - "5000:5000"
        volumes:
        - ./srv/images:/app/static/images # should map to S3 bucket or similar
        - ./srv/data:/app/data # will remove when DB service available
        networks:
        - photonet

    frontend:
        container_name: photo_frontend
        image: slimpsv/photo_frontend
        restart: always
        build: frontend/.
        ports:
        - "3000:3000"
        depends_on:
        - nginx-proxy
        environment:
        - VIRTUAL_HOST=example.local
        - VIRTUAL_PORT=3000
        networks:
        - photonet
        - proxynet

    nginx-proxy:
        image: jwilder/nginx-proxy
        container_name: proxy
        ports:
        - 80:80
        volumes:
        - /var/run/docker.sock:/tmp/docker.sock:ro
        - /etc/nginx/vhost.d
        networks:
        - proxynet

networks:
    photonet:
    proxynet:
        driver: bridge

volumes:
    database:
    backend:
